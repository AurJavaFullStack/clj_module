;; Analyzed by ClojureScript 0.0-3308
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name helloworld.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, helloworld.title helloworld.title, cljs.core.async cljs.core.async}, :uses {items-list helloworld.title, <! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {EVENTCHANNEL {:name helloworld.core/EVENTCHANNEL, :file "src/helloworld/core.cljs", :line 7, :column 1, :end-line 7, :end-column 18, :meta {:file "/Users/AlwaysBCoding/Desktop/Always Be Coding/clojurescript/helloworld/src/helloworld/core.cljs", :line 7, :column 6, :end-line 7, :end-column 18}}, app-state {:name helloworld.core/app-state, :file "src/helloworld/core.cljs", :line 9, :column 1, :end-line 9, :end-column 19, :meta {:file "/Users/AlwaysBCoding/Desktop/Always Be Coding/clojurescript/helloworld/src/helloworld/core.cljs", :line 9, :column 10, :end-line 9, :end-column 19}}, EVENTS {:name helloworld.core/EVENTS, :file "src/helloworld/core.cljs", :line 19, :column 1, :end-line 19, :end-column 12, :meta {:file "/Users/AlwaysBCoding/Desktop/Always Be Coding/clojurescript/helloworld/src/helloworld/core.cljs", :line 19, :column 6, :end-line 19, :end-column 12}}, header {:protocol-inline nil, :meta {:file "/Users/AlwaysBCoding/Desktop/Always Be Coding/clojurescript/helloworld/src/helloworld/core.cljs", :line 28, :column 7, :end-line 28, :end-column 13, :arglists (quote ([message]))}, :name helloworld.core/header, :variadic false, :file "src/helloworld/core.cljs", :end-column 13, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}, app {:protocol-inline nil, :meta {:file "/Users/AlwaysBCoding/Desktop/Always Be Coding/clojurescript/helloworld/src/helloworld/core.cljs", :line 32, :column 7, :end-line 32, :end-column 10, :arglists (quote ([]))}, :name helloworld.core/app, :variadic false, :file "src/helloworld/core.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:update-active-item :else :recur :on-click :div :class :display :h2 :items :active-item :message}, :order [:message :items :active-item :display :update-active-item :recur :else :div :on-click :h2 :class]}, :doc nil}